name: Build Android APK

on:
  push:
    branches: [ feature/CSB-47/integrate-CNN-model-unreleased, main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Permite ejecutar manualmente desde GitHub

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: sign-Bridge/package-lock.json
      
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: 📦 Install dependencies
        working-directory: ./sign-Bridge
        run: npm install --legacy-peer-deps
      
      - name: 🏗️ Run Expo Prebuild
        working-directory: ./sign-Bridge
        run: npx expo prebuild --platform android --clean
      
      - name: � Copy TFLite model to Android assets
        run: |
          mkdir -p sign-Bridge/android/app/src/main/assets/Modelo
          cp sign-Bridge/assets/Modelo/best_float16.tflite sign-Bridge/android/app/src/main/assets/Modelo/
          echo "✅ Model copied: $(ls -lh sign-Bridge/android/app/src/main/assets/Modelo/)"
      
      - name: �📝 Create splash screen logo
        run: |
          mkdir -p sign-Bridge/android/app/src/main/res/drawable
          cat > sign-Bridge/android/app/src/main/res/drawable/splashscreen_logo.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="108dp"
              android:height="108dp"
              android:viewportWidth="108"
              android:viewportHeight="108">
              <path
                  android:fillColor="#000000"
                  android:pathData="M0,0h108v108h-108z"/>
              <path
                  android:fillColor="#00FF88"
                  android:pathData="M54,20 C48,20 43,25 43,31 L43,50 L40,50 C37,50 34,53 34,56 L34,66 C34,69 37,72 40,72 L68,72 C71,72 74,69 74,66 L74,35 C74,29 69,24 63,24 C62,24 61,24.5 60,25 C59,22 56,20 54,20 Z"/>
              <path
                  android:fillColor="#00FF88"
                  android:pathData="M30,82 L78,82"
                  android:strokeWidth="2"
                  android:strokeColor="#00FF88"/>
          </vector>
          EOF
      
      - name: 🔨 Build Android APK
        working-directory: ./sign-Bridge/android
        run: ./gradlew assembleDebug --no-daemon --stacktrace
      
      - name: 📤 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: sign-Bridge/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30
      
      - name: 📊 Build Summary
        run: |
          echo "✅ Build completado exitosamente!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📱 **APK generado:**" >> $GITHUB_STEP_SUMMARY
          echo "- Nombre: \`app-debug.apk\`" >> $GITHUB_STEP_SUMMARY
          echo "- Ubicación: \`sign-Bridge/android/app/build/outputs/apk/debug/\`" >> $GITHUB_STEP_SUMMARY
          echo "- Tamaño: $(du -h sign-Bridge/android/app/build/outputs/apk/debug/app-debug.apk | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎯 **Próximos pasos:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Descarga el APK desde la pestaña 'Artifacts' arriba" >> $GITHUB_STEP_SUMMARY
          echo "2. Instala en tu dispositivo/emulador: \`adb install app-debug.apk\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Verifica los logs del modelo TFLite: \`adb logcat -s ReactNativeJS:V\`" >> $GITHUB_STEP_SUMMARY
